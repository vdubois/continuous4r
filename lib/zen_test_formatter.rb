require 'rubygems'
require 'XmlElements'
# =====================================================
# Classe de formatage des resultats renvoyes par les
# differents resultats de ZenTest
# Author: Vincent Dubois
# =====================================================
class ZenTestFormatter
  attr_accessor :params
  
  # Constructeur
  def initialize params
    self.params = params
  end
  
  # Methode qui permet de fabriquer le flux HTML a partir des flux console
  # de ZenTest
  def to_html
    html = "<table class='bodyTable'><thead><th>Element</th><th>Pass</th><th>Errors</th><th>Generated class</th></thead><tbody>"
    i = 0
    self.params.each('runner') do |runner|
      puts " Running ZenTest on #{runner['class']} against #{runner['test']}..."
      html = html + "<tr class='#{ i % 2 == 0 ? 'a' : 'b'}'><td><strong>#{runner['class']}</strong> against <strong>#{runner['test']}</strong></td>"
      system("zentest -r #{runner['class']} #{runner['test']} > continuous4r_build/zentest.log")
      file_content = File.read("continuous4r_build/zentest.log")
      file_lines = file_content.split(/$/)
      start_line = 0
      while file_lines[start_line].index("Code Generated by ZenTest").nil?
        start_line = start_line + 1
      end
      end_line = start_line
      while file_lines[end_line].index("Number of errors detected").nil?
        end_line = end_line + 1
      end
      number_of_errors = file_lines[end_line][29..(file_lines[end_line].length - 1)]
      end_line = end_line - 1
      html = html + "<td style='text-align: center;'><img src='images/icon_#{(number_of_errors.to_i == 0) ? 'success' : 'error'}_sml.gif'/></td>"
      html = html + "<td style='text-align: center;'>#{number_of_errors}</td>"
      html = html + "<td style='width: 75%;'><pre style='font-family: Courier New;'>"
      (start_line..end_line).to_a.each do |index|
        html = html + file_lines[index]
      end
      html = html + "</pre></td></tr>"
      i = i + 1
    end
    html = html + "</tbody></table>"
  end
end
